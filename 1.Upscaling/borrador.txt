
####BORRADOR

tiempo_inicio <- Sys.time()


lista_grids1 <- list()
for (year in 2001:2022){
    if (year != 2022){
        for (season in 1:12){
            grid <- subsetGrid(grid = fba.merge, year = year, season = season)
            #Creamos un nuevo grid que se llamaría SuperficieAreaQuemable multiplicando el procentaje de cada pixel de FractionBurneableArea (fba) por la superficie que corresponde a cada pixel de SuperficiePorPixel.
            #superficieAreaQuemable_i <- grid
            #datos <- (superficieAreaQuemable_i$Data)*as.vector(areasPixeles_025$Data)
            #superficieAreaQuemable_i$Data <- datos
            superficieAreaQuemable_i <- gridArithmetics(grid, areasPixeles_025, operator = "*")
            name = paste('minigrid',year, season, sep = '_')
            assign(name, superficieAreaQuemable_i)
            lista_grids1[[name]] <- superficieAreaQuemable_i
        }   
    }else{
        for (season in 1:4){
            grid <- subsetGrid(grid = fba.merge, year = year, season = season)
            #superficieAreaQuemable_i <- grid
            #datos <- (superficieAreaQuemable_i$Data)*as.vector(areasPixeles_025$Data)
            #superficieAreaQuemable_i$Data <- datos
            superficieAreaQuemable_i <- gridArithmetics(grid, areasPixeles_025, operator = "*")
            name = paste('minigrid',year, season, sep = '_')
            assign(name, superficieAreaQuemable_i)
            lista_grids1[[name]] <- superficieAreaQuemable_i
        }        
    }
}
superficieAreaQuemable_025 <- bindGrid(lista_grids1,dimension = c("time"))
superficieAreaQuemable_025$Dates$start <- unname(superficieAreaQuemable_025$Dates$start)
superficieAreaQuemable_025$Dates$end <- unname(superficieAreaQuemable_025$Dates$end)
superficieAreaQuemable_025$Variable$varName <- "SuperficieAreaQuemablePorPixel"
print('Superficie de área quemable calculada')

#Hacemos upscale de SuperficieAreaQuemable con la función sum (tal como hicimos con BA) a una resolución x obteniendo SuperficieAreaQuemable_x
superficieAreaQuemable_05 <- upscaleGrid(grid = superficieAreaQuemable_025, times = 2, aggr.fun = list(FUN = sum, na.rm = TRUE)) #gestion de los NA's?
####Ahora usamos la formula teorica para conseguir areas pixeles a 0.5
print('Superficie de área quemable upscaled con éxito')

#Dividimos SuperficieAreaQuemable_x por SuperficiePorPixel_x para tener la FBA a la nueva resolución X
lista_grids2 <- list()
for (year in 2001:2022){
    if (year != 2022){
        for (season in 1:12){
            grid <- subsetGrid(grid = superficieAreaQuemable_05, year = year, season = season)
            #Creamos un nuevo grid que se llamaría SuperficieAreaQuemable multiplicando el procentaje de cada pixel de FractionBurneableArea (fba) por la superficie que corresponde a cada pixel de SuperficiePorPixel.
            fraccionAreaQuemable_i <- grid
            datos <- (fraccionAreaQuemable_i$Data)/as.vector(areasPixeles_05$Data)
            fraccionAreaQuemable_i$Data <- datos
            #superficieAreaQuemable_i <- gridArithmetics(grid, areasPixeles_05, operator = "/")
            #asignamos la variable del mini grid creado
            name = paste('minigrid',year, season, sep = '_')
            assign(name, fraccionAreaQuemable_i)
            lista_grids2[[name]] <- fraccionAreaQuemable_i
        }   
    }else{
        for (season in 1:4){
            grid <- subsetGrid(grid = superficieAreaQuemable_05, year = year, season = season)
            fraccionAreaQuemable_i <- grid
            datos <- (fraccionAreaQuemable_i$Data)/as.vector(areasPixeles_05$Data)
            fraccionAreaQuemable_i$Data <- datos
            #asignamos la variable del mini grid creado
            #superficieAreaQuemable_i <- gridArithmetics(grid, areasPixeles_05, operator = "/")
            name = paste('minigrid',year, season, sep = '_')
            assign(name, fraccionAreaQuemable_i)
            lista_grids2[[name]] <- fraccionAreaQuemable_i
        }        
    }
}
fba_05 <- bindGrid(lista_grids2,dimension = c("time"))
fba_05$Dates$start <- unname(fba_05$Dates$start)
fba_05$Dates$end <- unname(fba_05$Dates$end)
fba_05$Variable$varName <- "fba_05"
#datos <- fba_05$Data/max(fba_05$Data)
#fba_05$Data <- datos


save(fba_05, file = "upscaling_fba/fba_grid_05.Rdata")
tiempo_fin <- Sys.time()
duracion <- tiempo_fin - tiempo_inicio
print(duracion)